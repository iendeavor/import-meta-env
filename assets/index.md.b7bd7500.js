import{_ as e,c as s,o as a,a as n}from"./app.4c472213.js";const y='{"title":"Import-meta-env","description":"","frontmatter":{},"headers":[{"level":2,"title":"How it Works","slug":"how-it-works"}],"relativePath":"index.md"}',o={name:"index.md"},t=n(`<h1 id="import-meta-env" tabindex="-1">Import-meta-env <a class="header-anchor" href="#import-meta-env" aria-hidden="true">#</a></h1><p><strong>Note: You can also follow <a href="https://github.com/iendeavor/runtime-environment-variables-example" target="_blank" rel="noopener noreferrer">iendeavor/runtime-environment-variables-example</a> to implement a runtime environment variable solution without using this library.</strong></p><p>Populates your environment variables after build-time.</p><p><a href="/import-meta-env/guide.html#getting-started">Get Started</a></p><p><a href="https://github.com/iendeavor/import-meta-env/tree/main/packages/examples" target="_blank" rel="noopener noreferrer">Examples</a></p><h2 id="how-it-works" tabindex="-1">How it Works <a class="header-anchor" href="#how-it-works" aria-hidden="true">#</a></h2><p>This plugin exposes environment variables on a special <code>import.<wbr>meta.env</code><a href="./guide.html#why-use-importmeta"><sup>?</sup></a> object:</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// src/index.js</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">API_BASE_URL)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>During bundle step (for example, running Webpack in Github Actions), the code will be temporarily replaced with a placeholder:</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// dist/index.js</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">__import_meta_env_placeholder__</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">API_BASE_URL)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>You can then run the <a href="./guide.html#install-cli">CLI</a> anywhere to populating the bundle files with environment variables <em>without rebuilding your application</em>.</p><p>For example, <a href="https://docs.docker.com/engine/reference/commandline/run/#set-environment-variables--e---env---env-file" target="_blank" rel="noopener noreferrer"><code>docker run --env API_BASE_URL=https://httpbin.org ...</code></a>:</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// dist/index.js</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://httpbin.org</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,13),l=[t];function p(r,i,c,d,m,h){return a(),s("div",null,l)}var D=e(o,[["render",p]]);export{y as __pageData,D as default};
